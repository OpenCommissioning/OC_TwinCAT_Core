<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_SimMovitrac_Test" Id="{05de50b3-1022-010d-3ab1-3de451ea8d3e}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_SimMovitrac_Test EXTENDS FB_TestSuite
VAR
	fbMovitrac : FB_SimMovitrac;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// No Movement
Test_Movitrac('No Movement, No STO', FALSE, FALSE, TRUE, TRUE, 1000, 0, FALSE, 10);
Test_Movitrac('No Movement, ControllerInhibit', TRUE, TRUE, TRUE, TRUE, 1000, 0, FALSE, 10);
Test_Movitrac('No Movement, No RapidStop', TRUE, FALSE, FALSE, TRUE, 1000, 0, FALSE, 10);
Test_Movitrac('No Movement, No Stop', TRUE, FALSE, TRUE, FALSE, 1000, 0, FALSE, 10);

// Movement
Test_Movitrac('Velocity postive', TRUE, FALSE, TRUE, TRUE, 1000, 1000, TRUE, 50);
Test_Movitrac('Velocity negative', TRUE, FALSE, TRUE, TRUE, -1000, -1000, TRUE, 50);
Test_Movitrac('Velocity 0', TRUE, FALSE, TRUE, TRUE, 0, 0, FALSE, 50);

// Stop
Test_Movitrac('Velocity to Stop', TRUE, FALSE, TRUE, TRUE, 1000, 1000, TRUE, 50);
Test_Movitrac('Stop', TRUE, FALSE, TRUE, FALSE, 0, 0, FALSE, 50);

// Rapid Stop
Test_Movitrac('Velocity to Rapid Stop', TRUE, FALSE, TRUE, TRUE, 1000, 1000, TRUE, 50);
Test_Movitrac('Rapid Stop', TRUE, FALSE, FALSE, TRUE, 0, 0, FALSE, 50);

// STO Stop
Test_Movitrac('Velocity to STO Stop', TRUE, FALSE, TRUE, TRUE, 1000, 1000, TRUE, 50);
Test_Movitrac('STO Stop', FALSE, FALSE, TRUE, TRUE, 0, 0, FALSE, 50);]]></ST>
    </Implementation>
    <Method Name="Test_Movitrac" Id="{7917e7ee-96fb-0fc5-3791-2fa4d9b1748c}">
      <Declaration><![CDATA[METHOD Test_Movitrac
VAR
	nCycleCount : INT;
	bResultOutputStage : BOOL;
END_VAR
VAR_INPUT
	sTestInfo			: T_MaxString;
	bSto				: BOOL;
	bControllerInhibit	: BOOL;
	bRapidStop			: BOOL;
	bStop				: BOOL;
	nSetpointSpeed		: INT;	
	eExpectedSpeed		: INT;
	bExpectedOutputStage: BOOL;		
	bCycles				: INT;	
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST(sTestInfo);

fbMovitrac.bSTO := bSTO;
fbMovitrac.stControlData.bControllerInhibit := bControllerInhibit;
fbMovitrac.stControlData.bRapidStop := bRapidStop;
fbMovitrac.stControlData.bStop := bStop;
fbMovitrac.stControlData.nSetpointSpeed := nSetpointSpeed; 

FOR nCycleCount := 0 TO bCycles DO
    fbMovitrac();
END_FOR

bResultOutputStage := fbMovitrac.stStatusData.bEnableOutputStage;

AssertEquals(Expected := eExpectedSpeed,
             Actual := fbMovitrac.stStatusData.nActSpeed,
             Message := 'Velocity/Speed is not correct');
			 
AssertEquals(Expected := bExpectedOutputStage,
             Actual := bResultOutputStage,
             Message := 'EnableOutputStage is not correct');

TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_SimMovitrac_Test">
      <LineId Id="63" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="54" Count="2" />
      <LineId Id="68" Count="0" />
      <LineId Id="65" Count="0" />
      <LineId Id="62" Count="0" />
      <LineId Id="67" Count="0" />
      <LineId Id="80" Count="0" />
      <LineId Id="75" Count="0" />
      <LineId Id="74" Count="0" />
      <LineId Id="81" Count="0" />
      <LineId Id="73" Count="0" />
      <LineId Id="83" Count="2" />
      <LineId Id="82" Count="0" />
      <LineId Id="87" Count="2" />
      <LineId Id="86" Count="0" />
    </LineIds>
    <LineIds Name="FB_SimMovitrac_Test.Test_Movitrac">
      <LineId Id="105" Count="0" />
      <LineId Id="295" Count="5" />
      <LineId Id="349" Count="0" />
      <LineId Id="351" Count="2" />
      <LineId Id="332" Count="1" />
      <LineId Id="305" Count="0" />
      <LineId Id="307" Count="1" />
      <LineId Id="306" Count="0" />
      <LineId Id="122" Count="0" />
      <LineId Id="309" Count="1" />
      <LineId Id="302" Count="0" />
      <LineId Id="301" Count="0" />
      <LineId Id="76" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>