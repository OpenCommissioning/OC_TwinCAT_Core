<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_SimMovidriveFSM_Test" Id="{ea3bb2a2-93a8-0fc0-0a79-d4388b2db0fd}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_SimMovidriveFSM_Test EXTENDS TcUnit.FB_TestSuite]]></Declaration>
    <Implementation>
      <ST><![CDATA[// TestState(sTestInfo, bControllerInhibit, bRapidStop,	bStop,	bHoldControl, eInitState, eExpectedState)	

// ControllerInhibit
TestState('ControllerInhibit, no transition', TRUE, FALSE, FALSE, FALSE, E_SimMovitracState.ControllerInhibit, E_SimMovitracState.ControllerInhibit);
TestState('ControllerInhibit -> RapidStop', FALSE, FALSE, FALSE, FALSE, E_SimMovitracState.ControllerInhibit, E_SimMovitracState.RapidStop);

//  RapidStop 
TestState('RapidStop, no transition', FALSE, FALSE, FALSE, FALSE, E_SimMovitracState.RapidStop, E_SimMovitracState.RapidStop);
TestState('RapidStop -> ControllerInhibit', TRUE, FALSE, FALSE, FALSE, E_SimMovitracState.RapidStop, E_SimMovitracState.ControllerInhibit);
TestState('RapidStop -> Halt', FALSE, TRUE, FALSE, FALSE, E_SimMovitracState.RapidStop, E_SimMovitracState.Halt);

// Halt
TestState('Halt, no transition', FALSE, TRUE, FALSE, FALSE, E_SimMovitracState.Halt, E_SimMovitracState.Halt);
TestState('Halt -> ControllerInhibit', TRUE, FALSE, FALSE, FALSE, E_SimMovitracState.Halt, E_SimMovitracState.ControllerInhibit);
TestState('Halt -> RapidStop', FALSE, FALSE, FALSE, FALSE, E_SimMovitracState.Halt, E_SimMovitracState.RapidStop);
TestState('Halt -> HoldControl', FALSE, TRUE, TRUE, TRUE, E_SimMovitracState.Halt, E_SimMovitracState.HoldControl);
TestState('Halt -> Enable', FALSE, TRUE, TRUE, FALSE, E_SimMovitracState.Halt, E_SimMovitracState.Enable);

// Enable
TestState('Enable, no transition', FALSE, TRUE, TRUE, FALSE, E_SimMovitracState.Enable, E_SimMovitracState.Enable);
TestState('Enable -> ControllerInhibit', TRUE, FALSE, FALSE, FALSE, E_SimMovitracState.Enable, E_SimMovitracState.ControllerInhibit);
TestState('Enable -> RapidStop', FALSE, FALSE, FALSE, FALSE, E_SimMovitracState.Enable, E_SimMovitracState.RapidStop);
TestState('Enable -> Halt', FALSE, TRUE, FALSE, FALSE, E_SimMovitracState.Enable, E_SimMovitracState.Halt);
TestState('Enable -> HoldControl', FALSE, TRUE, TRUE, TRUE, E_SimMovitracState.Enable, E_SimMovitracState.HoldControl);

// HoldControl
TestState('HoldControl, no transition', FALSE, TRUE, TRUE, TRUE, E_SimMovitracState.HoldControl, E_SimMovitracState.HoldControl);
TestState('HoldControl -> ControllerInhibit', TRUE, FALSE, FALSE, FALSE, E_SimMovitracState.HoldControl, E_SimMovitracState.ControllerInhibit);
TestState('HoldControl -> RapidStop', FALSE, FALSE, FALSE, FALSE, E_SimMovitracState.HoldControl, E_SimMovitracState.RapidStop);
TestState('HoldControl -> Halt', FALSE, TRUE, FALSE, FALSE, E_SimMovitracState.HoldControl, E_SimMovitracState.Halt);
TestState('HoldControl -> Enable', FALSE, TRUE, TRUE, FALSE, E_SimMovitracState.HoldControl, E_SimMovitracState.Enable);]]></ST>
    </Implementation>
    <Method Name="TestState" Id="{ae90108a-2587-042c-3213-243aec922eee}">
      <Declaration><![CDATA[METHOD TestState : BOOL
VAR_INPUT
	sTestInfo			: T_MaxString;
	bControllerInhibit	: BOOL;
	bRapidStop			: BOOL;
	bStop				: BOOL;
	bHoldControl		: BOOL;
	eInitState			: E_SimMovitracState;	
	eExpectedState		: E_SimMovitracState;	
END_VAR

VAR
		fbMovidriveStateMachine		: FB_SimMovitracFSM;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST(sTestInfo);

fbMovidriveStateMachine.bControllerInhibit := bControllerInhibit;
fbMovidriveStateMachine.bRapidStop := bRapidStop;
fbMovidriveStateMachine.bStop := bStop;
fbMovidriveStateMachine.bHoldControl := bHoldControl;

fbMovidriveStateMachine.nState := eInitState;

fbMovidriveStateMachine();

AssertEquals(Expected := eExpectedState,
             Actual := fbMovidriveStateMachine.eState,
             Message := 'State is not correct');
	 
TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_SimMovidriveFSM_Test">
      <LineId Id="12" Count="0" />
      <LineId Id="21" Count="1" />
      <LineId Id="9" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="27" Count="1" />
      <LineId Id="26" Count="0" />
      <LineId Id="29" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="36" Count="0" />
      <LineId Id="38" Count="0" />
      <LineId Id="35" Count="0" />
      <LineId Id="47" Count="0" />
      <LineId Id="39" Count="0" />
      <LineId Id="43" Count="0" />
      <LineId Id="50" Count="0" />
      <LineId Id="54" Count="5" />
      <LineId Id="53" Count="0" />
      <LineId Id="61" Count="5" />
      <LineId Id="60" Count="0" />
    </LineIds>
    <LineIds Name="FB_SimMovidriveFSM_Test.TestState">
      <LineId Id="7" Count="0" />
      <LineId Id="42" Count="0" />
      <LineId Id="36" Count="1" />
      <LineId Id="39" Count="1" />
      <LineId Id="24" Count="1" />
      <LineId Id="8" Count="2" />
      <LineId Id="21" Count="2" />
      <LineId Id="58" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>