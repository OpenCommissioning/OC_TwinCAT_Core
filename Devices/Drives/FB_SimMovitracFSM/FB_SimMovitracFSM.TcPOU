<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_SimMovitracFSM" Id="{13dfd547-1e98-0721-03fa-b95e41d349dd}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK INTERNAL FB_SimMovitracFSM
VAR_INPUT
	bControllerInhibit	: BOOL;
	bRapidStop			: BOOL;
	bStop				: BOOL;
	bHoldControl		: BOOL;
END_VAR
VAR_OUTPUT
	eState			: E_SimMovitracState := E_SimMovitracState.ControllerInhibit;	
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* Statemachine *)	
	CASE eState OF	
		E_SimMovitracState.ControllerInhibit: ControllerInhibit();		
		E_SimMovitracState.RapidStop:	RapidStop();
		E_SimMovitracState.Halt: Halt();
		E_SimMovitracState.HoldControl: HoldControl();
		E_SimMovitracState.Enable: Enable();
	END_CASE]]></ST>
    </Implementation>
    <Method Name="ControllerInhibit" Id="{5b23a47f-a970-0c02-213c-2d154d590752}">
      <Declaration><![CDATA[METHOD INTERNAL ControllerInhibit
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[(*to RapidStop*)	
	IF NOT bControllerInhibit THEN
		eState := E_SimMovitracState.RapidStop;
	END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="Enable" Id="{178a8ed2-e4ec-02f0-272d-23f6afe6b876}">
      <Declaration><![CDATA[METHOD INTERNAL Enable
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[(*to ControllerInhibit*)	
	IF bControllerInhibit THEN
		eState := E_SimMovitracState.ControllerInhibit;
		RETURN;
	END_IF

(*to RapidStop*)	
	IF NOT bRapidStop THEN
		eState := E_SimMovitracState.RapidStop;
		RETURN;
	END_IF
	
(*to Halt*)	
	IF NOT bStop THEN
		eState := E_SimMovitracState.Halt;
		RETURN;
	END_IF
	
(*to HoldControl*)	
	IF bHoldControl THEN
		eState := E_SimMovitracState.HoldControl;
	END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="Halt" Id="{1439a7d3-7070-0541-1e83-a29773d45bf0}">
      <Declaration><![CDATA[METHOD INTERNAL Halt
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[(*to ControllerInhibit*)	
	IF bControllerInhibit THEN
		eState := E_SimMovitracState.ControllerInhibit;
		RETURN;
	END_IF

(*to RapidStop*)	
	IF NOT bRapidStop THEN
		eState := E_SimMovitracState.RapidStop;
		RETURN;
	END_IF
	
(*to HoldControl*)	
	IF bStop AND bHoldControl THEN
		eState := E_SimMovitracState.HoldControl;
		RETURN;
	END_IF

(*to Enable*)	
	IF bStop AND NOT bHoldControl THEN
		eState := E_SimMovitracState.Enable;
	END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="HoldControl" Id="{cb7c0b11-0bc1-066b-0a35-3dbaf383a4dd}">
      <Declaration><![CDATA[METHOD INTERNAL HoldControl
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[(*to ControllerInhibit*)	
	IF bControllerInhibit THEN
		eState := E_SimMovitracState.ControllerInhibit;
		RETURN;
	END_IF

(*to RapidStop*)	
	IF NOT bRapidStop THEN
		eState := E_SimMovitracState.RapidStop;
		RETURN;
	END_IF
	
(*to Halt*)	
	IF NOT bStop THEN
		eState := E_SimMovitracState.Halt;
		RETURN;
	END_IF
	
(*to Enable*)	
	IF NOT bHoldControl THEN
		eState := E_SimMovitracState.Enable;
	END_IF]]></ST>
      </Implementation>
    </Method>
    <Property Name="nState" Id="{5b9e7a90-e13f-0d86-1112-6f77d141474c}">
      <Declaration><![CDATA[PROPERTY nState : E_SimMovitracState]]></Declaration>
      <Get Name="Get" Id="{8f8745ba-3fa1-05b0-01e5-29dfb0174d79}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[nState := eState;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{2c4f2a99-ebac-031c-178d-eca0dd67c5b6}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[eState := nState;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="RapidStop" Id="{1fbc26e3-1fa4-061a-051e-8d9943ff0fdb}">
      <Declaration><![CDATA[METHOD INTERNAL RapidStop
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[(*to ControllerInhibit*)	
	IF bControllerInhibit THEN
		eState := E_SimMovitracState.ControllerInhibit;
		RETURN;
	END_IF

(*to Halt*)	
	IF bRapidStop THEN
		eState := E_SimMovitracState.Halt;
	END_IF]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_SimMovitracFSM">
      <LineId Id="23" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="33" Count="0" />
      <LineId Id="40" Count="0" />
      <LineId Id="53" Count="0" />
      <LineId Id="78" Count="0" />
      <LineId Id="103" Count="0" />
      <LineId Id="24" Count="0" />
    </LineIds>
    <LineIds Name="FB_SimMovitracFSM.ControllerInhibit">
      <LineId Id="6" Count="2" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_SimMovitracFSM.Enable">
      <LineId Id="6" Count="20" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_SimMovitracFSM.Halt">
      <LineId Id="6" Count="20" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_SimMovitracFSM.HoldControl">
      <LineId Id="6" Count="20" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_SimMovitracFSM.nState.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_SimMovitracFSM.nState.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_SimMovitracFSM.RapidStop">
      <LineId Id="6" Count="8" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>