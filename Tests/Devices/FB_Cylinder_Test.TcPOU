<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_Cylinder_Test" Id="{4aa5bec3-e8a9-0d97-0520-d08e52c6fe69}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Cylinder_Test EXTENDS TcUnit.FB_TestSuite
VAR
	_fbCylinder 	: FB_Cylinder;
	_nExpected 		: BYTE;
	_nResult 		: BYTE;
	_bExpected 		: BOOL;
	_bResult 		: BOOL;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[TEST('bRetract FALSE');
_fbCylinder.bRetract := FALSE;
_fbCylinder();
_bExpected := FALSE;
_nResult := _fbCylinder.GetControl();
_bResult := _nResult.0;

AssertEquals(Expected := _bExpected,
             Actual := _bResult,
             Message := 'Control value is not correct');	
TEST_FINISHED();

TEST('bRetract TRUE');
_fbCylinder.bRetract := TRUE;
_fbCylinder();
_bExpected := TRUE;
_nResult := _fbCylinder.GetControl();
_bResult := _nResult.0;

AssertEquals(Expected := _bExpected,
             Actual := _bResult,
             Message := 'Control value is not correct');	
TEST_FINISHED();

TEST('bExtend FALSE');
_fbCylinder.bExtend := FALSE;
_fbCylinder();
_bExpected := FALSE;
_nResult := _fbCylinder.GetControl();
_bResult := _nResult.1;

AssertEquals(Expected := _bExpected,
             Actual := _bResult,
             Message := 'Control value is not correct');	
TEST_FINISHED();

TEST('bExtend TRUE');
_fbCylinder.bExtend := TRUE;
_fbCylinder();
_bExpected := TRUE;
_nResult := _fbCylinder.GetControl();
_bResult := _nResult.1;

AssertEquals(Expected := _bExpected,
             Actual := _bResult,
             Message := 'Control value is not correct');	
TEST_FINISHED();

TEST('bRetracted FALSE');
_fbCylinder.SetStatus(0);
_fbCylinder();
_bExpected := FALSE;
_bResult := _fbCylinder.bRetracted;

AssertEquals(Expected := _bExpected,
             Actual := _bResult,
             Message := 'Control value is not correct');	
TEST_FINISHED();

TEST('bRetracted TRUE');
_fbCylinder.SetStatus(1);
_fbCylinder();
_bExpected := TRUE;
_bResult := _fbCylinder.bRetracted;

AssertEquals(Expected := _bExpected,
             Actual := _bResult,
             Message := 'Control value is not correct');	
TEST_FINISHED();

TEST('bExtended FALSE');
_fbCylinder.SetStatus(0);
_fbCylinder();
_bExpected := FALSE;
_bResult := _fbCylinder.bExtended;

AssertEquals(Expected := _bExpected,
             Actual := _bResult,
             Message := 'Control value is not correct');	
TEST_FINISHED();

TEST('bExtended TRUE');
_fbCylinder.SetStatus(2);
_fbCylinder();
_bExpected := TRUE;
_bResult := _fbCylinder.bExtended;

AssertEquals(Expected := _bExpected,
             Actual := _bResult,
             Message := 'Control value is not correct');	
TEST_FINISHED();

]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>